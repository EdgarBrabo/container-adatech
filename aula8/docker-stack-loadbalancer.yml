version: "3.8"
services:
  loadbalancer: 
    image: traefik 
    container_name: loadbalancer
    command: 
      - "--api.insecure=true" 
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--logLevel=DEBUG"
      - "--metrics"
      - "--metrics.prometheus.buckets=0.1,0.3,1.2,5.0"
      - "--docker.swarmMode"
      - "--docker.domain=docker.localhost"
      - "--docker.watch"      
    ports:
      - target: 80
        published: 80
        mode: host
        protocol: tcp
      - target: 443
        published: 443
        mode: host
        protocol: tcp   
      - target: 8080
        published: 8080
        mode: host
        protocol: tcp        
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - backend 
      - frontend   
    deploy:
      mode: global
      update_config:
        parallelism: 1
        delay: 10s
        order: stop-first 
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
        window: 120s 
      placement:
        constraints:
          - node.role == manager                  
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=proxy"
        - "traefik.http.routers.api_traefik.rule=hostregexp(`{host:.+}`)"
        - "traefik.http.routers.api_traefik.entrypoints=traefik"
        - "traefik.http.routers.api_traefik.middlewares=auth-api"
        - "traefik.http.routers.api_traefik.service=api@internal"
        - "traefik.http.middlewares.auth-api.basicauth.users=stats:$$apr1$$Rfk/9mg5$$3FXyd4PYt6wD9bPLCexf00"
        - "traefik.http.services.api.loadbalancer.server.port=8080"
        - "traefik.http.services.api.loadbalancer.passhostheader=true"

networks:
  frontend:
  backend: